INT int at Line 1.
IDENT array at Line 1.
L_PAREN ( at Line 1.
R_PAREN ) at Line 1.
L_BRACE { at Line 2.
INT int at Line 3.
IDENT arr at Line 3.
L_BRACKT [ at Line 3.
INTEGER_CONST 10 at Line 3.
R_BRACKT ] at Line 3.
ASSIGN = at Line 3.
L_BRACE { at Line 3.
INTEGER_CONST 0 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 1 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 2 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 3 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 4 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 5 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 6 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 7 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 8 at Line 3.
COMMA , at Line 3.
INTEGER_CONST 9 at Line 3.
R_BRACE } at Line 3.
SEMICOLON ; at Line 3.
INT int at Line 5.
IDENT a1 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 0 at Line 5.
COMMA , at Line 5.
IDENT a2 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 3 at Line 5.
COMMA , at Line 5.
IDENT a3 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 5 at Line 5.
COMMA , at Line 5.
IDENT a4 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 7 at Line 5.
COMMA , at Line 5.
IDENT a5 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 9 at Line 5.
COMMA , at Line 5.
IDENT a6 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 1 at Line 5.
COMMA , at Line 5.
IDENT a7 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 2 at Line 5.
COMMA , at Line 5.
IDENT a8 at Line 5.
ASSIGN = at Line 5.
INTEGER_CONST 4 at Line 5.
COMMA , at Line 5.
IDENT a9 at Line 6.
ASSIGN = at Line 6.
INTEGER_CONST 6 at Line 6.
SEMICOLON ; at Line 6.
RETURN return at Line 8.
IDENT arr at Line 8.
L_BRACKT [ at Line 8.
IDENT a1 at Line 8.
R_BRACKT ] at Line 8.
PLUS + at Line 8.
IDENT arr at Line 8.
L_BRACKT [ at Line 8.
IDENT a2 at Line 8.
R_BRACKT ] at Line 8.
PLUS + at Line 8.
IDENT arr at Line 8.
L_BRACKT [ at Line 8.
IDENT a3 at Line 8.
R_BRACKT ] at Line 8.
PLUS + at Line 8.
IDENT arr at Line 8.
L_BRACKT [ at Line 8.
IDENT a4 at Line 8.
R_BRACKT ] at Line 8.
PLUS + at Line 8.
IDENT arr at Line 8.
L_BRACKT [ at Line 8.
IDENT a7 at Line 8.
R_BRACKT ] at Line 8.
PLUS + at Line 8.
IDENT arr at Line 8.
L_BRACKT [ at Line 8.
IDENT a8 at Line 8.
R_BRACKT ] at Line 8.
SEMICOLON ; at Line 8.
R_BRACE } at Line 9.
INT int at Line 11.
IDENT main at Line 11.
L_PAREN ( at Line 11.
R_PAREN ) at Line 11.
L_BRACE { at Line 12.
INT int at Line 13.
IDENT q at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 1 at Line 13.
COMMA , at Line 13.
IDENT r at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 2 at Line 13.
COMMA , at Line 13.
IDENT s at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 4 at Line 13.
COMMA , at Line 13.
IDENT t at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 7 at Line 13.
COMMA , at Line 13.
IDENT u at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 10 at Line 13.
COMMA , at Line 13.
IDENT v at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 11 at Line 13.
COMMA , at Line 13.
IDENT w at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 205 at Line 13.
COMMA , at Line 13.
IDENT x at Line 13.
ASSIGN = at Line 13.
INTEGER_CONST 63 at Line 13.
SEMICOLON ; at Line 13.
INT int at Line 15.
IDENT sum1 at Line 15.
ASSIGN = at Line 15.
IDENT q at Line 15.
PLUS + at Line 15.
IDENT r at Line 15.
PLUS + at Line 15.
IDENT s at Line 15.
PLUS + at Line 15.
IDENT t at Line 15.
PLUS + at Line 15.
IDENT u at Line 15.
PLUS + at Line 15.
IDENT v at Line 15.
PLUS + at Line 15.
IDENT w at Line 15.
PLUS + at Line 15.
IDENT x at Line 15.
SEMICOLON ; at Line 15.
INT int at Line 17.
IDENT sum2 at Line 17.
ASSIGN = at Line 17.
IDENT array at Line 17.
L_PAREN ( at Line 17.
R_PAREN ) at Line 17.
SEMICOLON ; at Line 17.
INT int at Line 19.
IDENT sum3 at Line 19.
ASSIGN = at Line 19.
IDENT sum1 at Line 19.
PLUS + at Line 19.
IDENT sum2 at Line 19.
SEMICOLON ; at Line 19.
RETURN return at Line 21.
INTEGER_CONST 0 at Line 21.
SEMICOLON ; at Line 21.
R_BRACE } at Line 22.